int __fastcall sub_8F8C88(int a1, int a2)
{
  int v4; // r6
  int v5; // r6
  int v6; // r6
  int v7; // r6
  int v8; // r6
  int v9; // r6
  int v10; // r6
  int v11; // r6
  int v12; // r6
  int v13; // r6
  int v14; // r6

  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)a1);
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 12));
  if ( *(int *)(a1 + 12) >= 1 )
  {
    v4 = 0;
    do
      sub_516690(*(_DWORD *)(*(_DWORD *)(a1 + 4) + 4 * v4++), a2);
    while ( v4 < *(_DWORD *)(a1 + 12) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 24));
  if ( *(int *)(a1 + 24) >= 1 )
  {
    v5 = 0;
    do
      sub_12474C(*(_DWORD *)(*(_DWORD *)(a1 + 16) + 4 * v5++), a2);
    while ( v5 < *(_DWORD *)(a1 + 24) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 36));
  if ( *(int *)(a1 + 36) >= 1 )
  {
    v6 = 0;
    do
      sub_12474C(*(_DWORD *)(*(_DWORD *)(a1 + 28) + 4 * v6++), a2);
    while ( v6 < *(_DWORD *)(a1 + 36) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 48));
  if ( *(int *)(a1 + 48) >= 1 )
  {
    v7 = 0;
    do
      (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 40) + 4 * v7++));
    while ( v7 < *(_DWORD *)(a1 + 48) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 60));
  if ( *(int *)(a1 + 60) >= 1 )
  {
    v8 = 0;
    do
      (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 52) + 4 * v8++));
    while ( v8 < *(_DWORD *)(a1 + 60) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 72));
  if ( *(int *)(a1 + 72) >= 1 )
  {
    v9 = 0;
    do
      (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 64) + 4 * v9++));
    while ( v9 < *(_DWORD *)(a1 + 72) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 112));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 124));
  if ( *(int *)(a1 + 124) >= 1 )
  {
    v10 = 0;
    do
      sub_AE0EC8(*(_DWORD *)(*(_DWORD *)(a1 + 116) + 4 * v10++), a2);
    while ( v10 < *(_DWORD *)(a1 + 124) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 136));
  if ( *(int *)(a1 + 136) >= 1 )
  {
    v11 = 0;
    do
      sub_744920(*(_DWORD *)(*(_DWORD *)(a1 + 128) + 4 * v11++), a2);
    while ( v11 < *(_DWORD *)(a1 + 136) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 148));
  if ( *(int *)(a1 + 148) >= 1 )
  {
    v12 = 0;
    do
      sub_5BF5A4(*(_DWORD *)(*(_DWORD *)(a1 + 140) + 4 * v12++), a2);
    while ( v12 < *(_DWORD *)(a1 + 148) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 160));
  if ( *(int *)(a1 + 160) >= 1 )
  {
    v13 = 0;
    do
      sub_1E1B90(*(_DWORD *)(*(_DWORD *)(a1 + 152) + 4 * v13++), a2);
    while ( v13 < *(_DWORD *)(a1 + 160) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 84));
  if ( *(int *)(a1 + 84) >= 1 )
  {
    v14 = 0;
    do
      (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 76) + 4 * v14++));
    while ( v14 < *(_DWORD *)(a1 + 84) );
  }
  return sub_8F8FDC(a2, *(_DWORD *)(a1 + 96), *(_DWORD *)(*(_DWORD *)a2 + 64));
}