int __fastcall sub_13606C(int a1, int a2)
{
  void (__fastcall *v4)(int, _DWORD); // r2
  int v5; // r6
  int v6; // r6
  int v7; // r6
  _DWORD *v8; // r0
  int v9; // r6
  _DWORD *v10; // r0
  int v11; // r6
  void (__fastcall *v12)(int, _DWORD); // r2
  int v13; // r6

  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)a1);
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 4));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 8));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 12));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 16));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 20));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 24));
  writeDataReference(a2, *(_DWORD *)(a1 + 28));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 40));
  v4 = *(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64);
  if ( *(int *)(a1 + 40) >= 1 )
  {
    v5 = 0;
    do
    {
      v4(a2, *(_DWORD *)(*(_DWORD *)(a1 + 32) + 4 * v5++));
      v4 = *(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64);
    }
    while ( v5 < *(_DWORD *)(a1 + 40) );
  }
  v4(a2, *(_DWORD *)(a1 + 52));
  if ( *(int *)(a1 + 52) >= 1 )
  {
    v6 = 0;
    do
      writeDataReference(a2, *(_DWORD *)(*(_DWORD *)(a1 + 44) + 4 * v6++));
    while ( v6 < *(_DWORD *)(a1 + 52) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 64));
  if ( *(int *)(a1 + 64) >= 1 )
  {
    v7 = 0;
    do
      writeDataReference(a2, *(_DWORD *)(*(_DWORD *)(a1 + 56) + 4 * v7++));
    while ( v7 < *(_DWORD *)(a1 + 64) );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 68));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 72));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 76));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 80));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 84));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 88));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 92));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 71));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 96));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 69));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 100));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 104));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 70));
  writeDataReference(a2, *(_DWORD *)(a1 + 108));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 112));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 116));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 120));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 124));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 128));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 32))(a2, *(unsigned __int8 *)(a1 + 132));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 136) + 8));
  v8 = *(_DWORD **)(a1 + 136);
  if ( (int)v8[2] >= 1 )
  {
    v9 = 0;
    do
    {
      sub_56374(*(_DWORD *)(*v8 + 4 * v9), a2);
      v8 = *(_DWORD **)(a1 + 136);
      ++v9;
    }
    while ( v9 < v8[2] );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(*(_DWORD *)(a1 + 140) + 8));
  v10 = *(_DWORD **)(a1 + 140);
  if ( (int)v10[2] >= 1 )
  {
    v11 = 0;
    do
    {
      sub_36F930(*(_DWORD **)(*v10 + 4 * v11), a2);
      v10 = *(_DWORD **)(a1 + 140);
      ++v11;
    }
    while ( v11 < v10[2] );
  }
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 144));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 148));
  (*(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 160));
  v12 = *(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64);
  if ( *(int *)(a1 + 160) >= 1 )
  {
    v13 = 0;
    do
    {
      v12(a2, *(_DWORD *)(*(_DWORD *)(a1 + 152) + 4 * v13++));
      v12 = *(void (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64);
    }
    while ( v13 < *(_DWORD *)(a1 + 160) );
  }
  v12(a2, *(_DWORD *)(a1 + 164));
  return (*(int (__fastcall **)(int, _DWORD))(*(_DWORD *)a2 + 64))(a2, *(_DWORD *)(a1 + 168));
}